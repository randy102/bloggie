@model Bloggie.Models.SidebarDropdown

@{
  // Current page URL
  string pageUrl = Context.Request.Path;

  // Dropdown is active (opened) if it's base URL matches current page URL
  var dropdownIsActive = pageUrl.StartsWith(Model.BaseUrl);

  // Label active class
  var labelActive = dropdownIsActive ? "active" : "";

  // Show dropdown class
  var showDropdown = dropdownIsActive ? "show" : "";

  // Random dropdown id
  var uniqueId = Guid.NewGuid().ToString("N");
}

<li class="sidebar-dropdown">
  <!-- Dropdown label -->
  <a href="#ID-@uniqueId" data-toggle="collapse" aria-expanded="false"
  class="dropdown-toggle sidebar-dropdown__label @labelActive">
    @Model.Label
  </a>

  <!-- Dropdown items -->
  <ul class="collapse list-unstyled sidebar-dropdown__items @showDropdown" id="ID-@uniqueId">
    @foreach (var item in Model.SidebarItems)
    {
      var url = Model.BaseUrl + "/" + item.Url;

      <vc:sidebar-item-component active="@(url == pageUrl)" sidebar-item="@item" />
    }
  </ul>
</li>